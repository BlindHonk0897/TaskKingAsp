@model Sample2.Models.EmployeeViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Employee</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Employee.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Employee.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Employee.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Employee.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Employee.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Employee.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Employee.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Employee.MiddleInitial, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Employee.MiddleInitial, new { htmlAttributes = new { @class = "form-control" } })*@

            @Html.EditorFor(model => model.Employee.MiddleInitial, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @style = "width:24% !important; min-width:180px;" } })
            <div class="row-md-10">
                <select class="form-control" id="MiddleInitial" name="MiddleInitial" style="width:auto;">
                    <option>---</option>
                    @foreach (var mid in Model.MiddleGenerators)
                    {
                        <option> @mid.Alpha</option>
                    }
                </select>
                @*@Html.DropDownListFor(model => model.Employee.MiddleInitial,new SelectList(Model.MiddleGenerators,"Alpha","Alpha"),"------",new { @class = "form-control" })*@


            </div>
            @Html.ValidationMessageFor(model => model.Employee.MiddleInitial, "", new { @class = "text-danger" })
        </div>
       
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Employee.Type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Employee.Type, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Employee.Type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-info" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index","", new { @class = "btn btn-success" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
